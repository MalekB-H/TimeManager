name: CI with Docker Compose

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Build and start services
        run: docker-compose up --build -d

      - name: Check api container health
        run: docker-compose ps

      - name: Display api logs
        run: docker-compose logs api

      - name: Wait for database to be ready
        run: docker-compose exec -T database sh -c "until pg_isready -h localhost -p 5432; do sleep 5; done"

      - name: Create database if it does not exist
        run: |
          DB_EXIST=$(docker-compose exec -T database psql -U postgres -tAc "SELECT 1 FROM pg_database WHERE datname='app'")
          if [ "$DB_EXIST" != "1" ]; then
            echo "Creating database 'app'..."
            docker-compose exec -T database psql -U postgres -c "CREATE DATABASE app;"
          else
            echo "Database 'app' already exists."
          fi

      - name: Run database migrations
        run: docker-compose exec -T api mix ecto.migrate

      - name: Run api tests with trace
        run: docker-compose exec -T api mix test --trace

      - name: Run frontend tests
        run: docker-compose exec -T frontend npm test

      - name: Shut down Docker Compose
        run: docker-compose down
