name: CI with Docker Compose

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # 3. Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      # 4. Build and start services with docker-compose
      - name: Build and start services
        run: docker-compose up --build -d

      # 5. Build and start services with docker-compose
      - name: Check front service logs
        run: docker-compose logs front

      # 6. Check running containers
      - name: Check running containers
        run: docker-compose ps

      # 7. Wait for all services to be ready
      - name: Wait for services to be ready
        run: |
          docker-compose exec -T database sh -c "until pg_isready -h localhost -p 5432; do sleep 2; done"
          docker-compose exec -T api sh -c "while ! curl -s http://localhost:4000 > /dev/null; do sleep 2; done"

      # 8. Check running containers
      - name: Check running containers
        run: docker-compose ps

      # 9. Check api logs
      - name: Check API logs
        run: docker-compose logs api

      # 10. Check database logs
      - name: Check database logs
        run: docker-compose logs database

      # 11. Run backend tests
      - name: Run backend tests
        run: |
          docker-compose exec -T api mix deps.get
          docker-compose exec -T api mix test --trace

      # 12. Run frontend tests
      - name: Run frontend tests
        run: |
          docker-compose exec -T front npm install
          docker-compose exec -T front npm test

      # 13. Shut down Docker Compose
      - name: Shut down Docker Compose
        run: docker-compose down
