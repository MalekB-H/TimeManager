name: CI with Docker Compose

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4   

      - name: Set up    Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Build and start services
        run: docker-compose up --build -d

      - name: Wait for database to be ready
        run: docker-compose exec -T database sh -c "until pg_isready -h localhost -p 5432; do sleep 5; done"

      - name: Run database migrations
        run: |
          docker-compose exec -T api mix ecto.migrate
          if [ $? -ne 0 ]; then
            echo "Migrations failed. Check logs for details."
            exit 1
          fi

      - name: Verify database schema
        run: |
          DATABASE_NAME=app
          TABLE_NAME=users
          docker-compose exec -T database psql -U postgres -p postgres -d "$DATABASE_NAME" -c "SELECT to_regclass('$TABLE_NAME');"
          if [ $? -ne 0 ]; then
            echo "Table '$TABLE_NAME' does not exist. Creating..."
            docker-compose exec -T database psql -U postgres -c "CREATE TABLE $TABLE_NAME (id SERIAL PRIMARY KEY, name TEXT);"  # Remplacez par votre schéma
          fi

      - name: Seed database (si nécessaire)
        run: |
          docker-compose exec -T api mix run priv/repo/seeds.exs

      - name: Run API tests
        run: docker-compose exec -T api mix test

      - name: Run frontend tests
        run: docker-compose exec -T frontend npm test

      - name: Shut down Docker Compose
        run: docker-compose down
