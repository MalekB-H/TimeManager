name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      database:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and run containers
        run: |
          docker-compose up --build -d
          docker-compose ps

      - name: Run API Tests
        run: |
          # Assuming you have tests defined for your API
          curl -f http://localhost:4000/api/health || exit 1

      - name: Run Frontend Tests
        run: |
          # Run tests for the frontend application
          curl -f http://localhost:8080 || exit 1

      - name: Run Security Tests
        run: |
          # Example security tests using OWASP ZAP
          docker run -t owasp/zap2docker-stable zap-baseline.py -t http://localhost:8080 -r zap_report.html
          
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v2
        with:
          name: zap-report
          path: zap_report.html

      - name: Shutdown services
        run: docker-compose down
